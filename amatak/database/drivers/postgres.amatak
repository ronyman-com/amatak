from .base_driver import BaseDriver
import psycopg2
from typing import List, Dict, Optional

class PostgresDriver(BaseDriver):
    def __init__(self):
        self.conn = None

    def connect(self, host='localhost', port=5432, dbname=None, 
               user=None, password=None, **kwargs):
        """Connect to PostgreSQL database"""
        self.conn = psycopg2.connect(
            host=host,
            port=port,
            dbname=dbname,
            user=user,
            password=password,
            **kwargs
        )

    def execute(self, query: str, params: Optional[List] = None) -> List[Dict]:
        """Execute query and return results"""
        cursor = self.conn.cursor()
        params = params or []
        cursor.execute(query, params)
        
        if query.lstrip().upper().startswith("SELECT"):
            columns = [desc[0] for desc in cursor.description]
            return [dict(zip(columns, row)) for row in cursor.fetchall()]
        self.conn.commit()
        return []

    def disconnect(self):
        """Close database connection"""
        if self.conn:
            self.conn.close()